- name: Functions
  hosts: local
  connection: local
  vars:
    technologies: DevOps, Ansible, Shell, Linux
    Name: "Vijay Amudalapalli"
    gmail: VIJAY@GMAIL.COM
    ipaddress: 192.168.0.1

    tags:
      Application: Payment
      Environment: Dev
    
    ListTags:
    - key: Application
      value: Payment

    - key: Environment
      value: Dev

    
  tasks:

  - name: Printing Default Name
    ansible.builtin.debug:
      msg: "Hello {{ name | default('Vijay') }}"
# "msg": "Hello Vijay"


  - name: List The Technologies
    ansible.builtin.debug:
      msg: "Technologies are : {{ technologies | split(',') }}"
# "msg": "Technologies are : ['DevOps', ' Ansible', ' Shell', ' Linux']"


  - name: Convert Maps To Lists
    ansible.builtin.debug:
      msg: "{{ tags | dict2items }}"
# "msg": [
#         {
#             "key": "Application",
#             "value": "Payment"
#         },
#         {
#             "key": "Environment",
#             "value": "Dev"
#         }
#     ]


  - name: Convert Lists To Maps
    ansible.builtin.debug:
      msg: "{{ ListTags | items2dict }}"
# "msg": {
#         "Application": "Payment",
#         "Environment": "Dev"
#     }


  - name: Convert Upper Case
    ansible.builtin.debug:
      msg: "{{ Name | upper }}"
# "msg": "VIJAY AMUDALAPALLI"


  - name: Convert Lower Case
    ansible.builtin.debug:
      msg: "{{ gmail | lower }}"
# "msg": "vijay@gmail.com"


  - name: Check IP Valid OR Not
    ansible.builtin.debug:
      msg: "{{ ipaddress | ansible.utils.ipv4 }}"
# "msg": "192.168.0.1"
  

  - name: Grep for Root
    # ansible.builtin.command: cat /etc/passwd | grep root
    ansible.builtin.shell: cat /etc/passwd | grep root
    register: command_output

  - name: printing command_output
    ansible.builtin.debug:
      msg: "{{ command_output }}"
# "msg": {
#         "changed": true,
#         "cmd": "cat /etc/passwd | grep root",
#         "delta": "0:00:00.009111",
#         "end": "2025-10-08 12:05:48.399805",
#         "failed": false,
#         "msg": "",
#         "rc": 0,
#         "start": "2025-10-08 12:05:48.390694",
#         "stderr": "",
#         "stderr_lines": [],
#         "stdout": "root:x:0:0:root:/root:/bin/bash\noperator:x:11:0:operator:/root:/sbin/nologin",
#         "stdout_lines": [
#             "root:x:0:0:root:/root:/bin/bash",
#             "operator:x:11:0:operator:/root:/sbin/nologin"
#         ]
#     }



  - name: Redirect the Output
    ansible.builtin.command: ls -ltr > /tmp/output.txt
    register: redirect_output
    ignore_errors: true
      
  - name: printing redirect_output command
    ansible.builtin.debug:
      msg: "{{ redirect_output }}"
  
#It is failed due to using of Command instead of Shell, here is the LOG   TASK [Redirect the Output] ******************************************************************************************************************************
# fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ls", "-ltr", ">", "/tmp/output.txt"], "delta": "0:00:00.007470", "end": "2025-10-08 11:52:50.718889", "msg": "non-zero return code", "rc": 2, "start": "2025-10-08 11:52:50.711419", "stderr": "ls: cannot access '>': No such file or directory\nls: cannot access '/tmp/output.txt': No such file or directory", "stderr_lines": ["ls: cannot access '>': No such file or directory", "ls: cannot access '/tmp/output.txt': No such file or directory"], "stdout": "", "stdout_lines": []}

# PLAY RECAP **********************************************************************************************************************************************
# localhost                  : ok=10   changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0

  - name: Redirect the Output shell
    ansible.builtin.shell: ls -ltr > /tmp/output.txt
    register: redirect_output
  
  - name: printing redirect_output shell
    ansible.builtin.debug:
      msg: "{{ redirect_output }}"

# "msg": {
#         "changed": true,
#         "cmd": "ls -ltr > /tmp/output.txt",
#         "delta": "0:00:00.006922",
#         "end": "2025-10-08 12:05:49.134509",
#         "failed": false,
#         "msg": "",
#         "rc": 0,
#         "start": "2025-10-08 12:05:49.127587",
#         "stderr": "",
#         "stderr_lines": [],
#         "stdout": "",
#         "stdout_lines": []
#     }
